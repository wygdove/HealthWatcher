<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.wygdove.hw" />

	<!-- 配置数据源文件 -->
	<bean id="jdbcConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="locations" value="classpath:jdbc.properties" />
	</bean>

	<!-- 配置数据源 1 -->
	<bean id="ds1" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc1.driverClassName}" />
		<property name="url" value="${jdbc1.url}" />
		<property name="username" value="${jdbc1.username}" />
		<property name="password" value="${jdbc1.password}" />
		<property name="maxTotal" value="${jdbc1.maxTotal}" />
		<property name="maxIdle" value="${jdbc1.maxIdle}" />
		<property name="maxWaitMillis" value="${jdbc1.maxWaitMillis}" />
		<property name="defaultAutoCommit" value="${jdbc1.defaultAutoCommit}" />
	</bean>

	<!-- 配置数据源 2 -->
	<bean id="ds2" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc2.driverClassName}" />
		<property name="url" value="${jdbc2.url}" />
		<property name="username" value="${jdbc2.username}" />
		<property name="password" value="${jdbc2.password}" />
		<property name="maxTotal" value="${jdbc2.maxTotal}" />
		<property name="maxIdle" value="${jdbc2.maxIdle}" />
		<property name="maxWaitMillis" value="${jdbc2.maxWaitMillis}" />
		<property name="defaultAutoCommit" value="${jdbc2.defaultAutoCommit}" />
	</bean>

	<bean id="dataSource" class="com.wygdove.hw.common.constant.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="ds1" key="ds1"></entry>
				<entry value-ref="ds2" key="ds2"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="ds1"></property>
	</bean>

	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mappers.xml文件 ，要加上classpath:com/... -->
		<property name="mapperLocations" value="classpath:com/wygdove/hw/mybatis/dao/mapper/*.xml"></property>
		<!-- mybatis配置文件 -->
		<!--<property name="configLocation" value="classpath:mybatis-config.xml"></property> -->
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wygdove.hw.mybatis.dao" />
		<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property> -->
	</bean>

	<!-- SqlSeesionTemplate是线程安全的,可以被多个Dao共享,可以使用Singleton -->
	<bean id="SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 配置事务通知属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 定义事务传播属性 -->
		<tx:attributes>
			<!-- 对insert,update,delete 开头的方法进行事务管理,只要有异常就回滚 -->
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
			<!-- select,count开头的方法,开启只读,提高数据库访问性能 -->
			<tx:method name="select*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<!-- 对其他方法 使用默认的事务管理 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置事务切面 -->
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* com.wygdove.hw.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>

</beans>